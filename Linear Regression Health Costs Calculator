import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error

# Load the dataset
data = pd.read_csv('insurance.csv')

# Convert categorical data to numerical
encoded_data = pd.get_dummies(data, columns=['sex', 'smoker', 'region'], drop_first=True)

# Split the dataset into features and labels
X = encoded_data.drop('expenses', axis=1)
y = encoded_data['expenses']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Evaluate the model
predictions = model.predict(X_test)
mae = mean_absolute_error(y_test, predictions)

print(f'Mean Absolute Error: {mae}')

# Visualization (optional)
import matplotlib.pyplot as plt

plt.scatter(y_test, predictions)
plt.xlabel('Actual Expenses')
plt.ylabel('Predicted Expenses')
plt.title('Actual vs Predicted Healthcare Costs')
plt.show()
